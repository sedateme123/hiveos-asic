#!/bin/sh

[ -e "/usr/bin/compile_time" ] && ASIC_MODEL=`sed -n 2p /usr/bin/compile_time` #Antminer
[ -e "/opt/system/bank.conf" ] && ASIC_MODEL="ebit" #Ebit
[ -e "/etc/hwrevision" ] && ASIC_MODEL=`cut -d\  -f 2 /etc/hwrevision` #Innosilicon
[ -e "/var/www/html/src/Template/Layout/signin.twig" ] && ASIC_MODEL=`cat /var/www/html/src/Template/Layout/signin.twig | grep title | sed 's/<[^>]*>//g' | sed s/\ *//` #Zig old firmware
[ -e "/var/www/html/src/Template/Layout/signin.twig" ] && [ -e "/var/www/html/TYPE" ] && ASIC_MODEL=$(echo $ASIC_MODEL | sed s/"{{ type() }}"/$(cat /var/www/html/TYPE)/) #Zig new firmware
[ -e "/tmp/type" ] && [ ! -e "/etc/hwrevision" ] && ASIC_MODEL=`cat /tmp/type`.`cat /tmp/hwver` #Innosilicon A5/8
echo $ASIC_MODEL

if [ "$ASIC_MODEL" == "Zig Z1+" ] || [ "$ASIC_MODEL" == "Zig Z1" ]; then
	release=`wget -q -O- https://raw.githubusercontent.com/minershive/hiveos-asic/master/hive/etc/VERSION`
else
	release=`curl -f --silent -L --insecure https://raw.githubusercontent.com/minershive/hiveos-asic/master/hive/etc/VERSION`
fi

exitcode=$?
version=0
[ -e /hive/etc/VERSION ] && version=`cat /hive/etc/VERSION`
filename=v$release.tar.gz

t=`df -h | grep  '/tmp' | awk '{print $NF}'`
[ -z $t ] && t='/tmp'

cd $t
rm -rf /tmp/hive/*
rm -rf /tmp/hiveos-asic*
rm -rf /tmp/selfupgrade
rm -rf /tmp/master.tar.gz
rm -rf /tmp/v*.tar.gz

if [ $release == $version ]; then
	if [ "$1" != "master" ]; then
		if [ "$2" != "-f" ]; then
			[ -e /hive/bin/colors ] && source /hive/bin/colors
			echo -e "${GREEN}Hive is up to date already${NOCOLOR}"
			exit $exitcode
		fi
	fi
fi
if [ $exitcode -ne 0 ] || [ -z $release ]; then
	echo "Can't get current version from repository"
	exit $exitcode
fi
if [ $# != "0" ]; then
	release=$1
	if [ $release == "master" ]; then
		filename=$release.tar.gz
	else
		filename=v$release.tar.gz
	fi
fi
url=http://github.com/minershive/hiveos-asic/archive/$filename

[ -e $filename ] && rm $filename

echo $url

echo "> Downloading $url"
if [ "$ASIC_MODEL" == "Zig Z1+" ] || [ "$ASIC_MODEL" == "Zig Z1" ]; then
	wget $url
else
	curl -L --insecure -O $url
fi

[ $? -ne 0 ] && echo "Error downloading $url" && exit 1

sleep 2


install_antminer_bmminer() { # bmminer, / - rw, cron
	echo ""
	echo "> Extracting $filename"
	if [ ! -d /config/hive ]; then
		mkdir -p /config/hive/hive-config
	fi
	tar -xzv -f $filename
	[ -L /hive ] && rm /hive

	echo_action 'Copying to /'
	cp -rf "hiveos-asic-${release_version_to_install}/hive" / || die 'Copy error'

	sleep 2

	case "$PATH" in
		*'/hive/bin:/hive/sbin'*)	: ok good to go								;;
		*)							export PATH="$PATH:/hive/bin:/hive/sbin"	;;
	esac
	export LD_LIBRARY_PATH=/hive/lib
	#[ -d /hive && ! -L /hive ] && mv -f /hive /config/hive/
	[ -d /hive-config ] && [ ! -L /hive-config ] && mv -f /hive-config /config/hive/

	if [ ! -e /hive-config ]; then
		#ln -s /config/hive/hive/ /hive
		ln -s /config/hive/hive-config/ /hive-config
	fi
	cp -rf /hive/share/S9/S69hive /etc/rcS.d/
	cp -rf /hive/share/S9/.profile /home/root/

	echo_action 'Booting The Client'
	/hive/bin/hive > /tmp/client-boot.log 2>&1

	sleep 2

	# FARM_HASH could be defined externaly or by command-line option
	/hive/bin/firstrun "$FARM_HASH"
}

install_antminer_cgminer () {
	#
	# cgminer, / - ro, no cron
	#

	[ ! -d /config/hive ] && mkdir /config/hive

	echo_action 'Copying to /config/hive/'
	cp -rf "hiveos-asic-${release_version_to_install}/"* /config/hive/ || die 'Copy error'

	sleep 2

	case "$PATH" in
		*'/hive/bin:/hive/sbin'*)	: ok good to go								;;
		*)							export PATH="$PATH:/hive/bin:/hive/sbin"	;;
	esac
	export LD_LIBRARY_PATH=/hive/lib

	if [ ! -e /hive ]; then
		ln -s /config/hive/hive/ /hive
		ln -s /config/hive/hive-config/ /hive-config
		ln -s /config/hive/home/root/.profile /home/root/.profile
	fi

	if grep -Fq '### HIVE AUTORUN ###' /config/network.conf || grep -Fq 'ln -s /config/hive/hive/ /hive' /config/network.conf || [ -n "$HIVEON_VERSION" ]; then
		echo_info 'Hiveon firmware found, /config/network.conf tampering skipped'
	else
		echo_info 'No Hiveon firmware found, injecting autorun into /config/network.conf'
		cat >> /config/network.conf <<-FILEEOF

			### HIVE AUTORUN ###
			[ -e /config/hive_autorun ] && nohup /bin/sh -c '/config/hive_autorun' > /dev/null 2>&1 &
		FILEEOF
	fi
	cp -rf /hive/bin/hive_autorun /config/hive_autorun

	echo_action 'Booting The Client'
	/hive/bin/hive > /tmp/client-boot.log 2>&1

	#on cgminer's antminer no cron daemon, run tasks in background
# legacy cron imitation
# now it's a /hive/bin/controller built-in
#	nohup bash -c 'sleep 60; /hive/bin/cron1' > /dev/null 2>&1 &
#	nohup bash -c 'sleep 60; /hive/bin/cron2' > /dev/null 2>&1 &

	sleep 2

	# FARM_HASH could be defined externaly or by command-line option
	/hive/bin/firstrun "$FARM_HASH"
}

install_antminer_Z9_cgminer () {
	#
	# cgminer, / - rw, no cron
	#

	if [ -e /hive ] && [ ! -L /hive ]; then
		mkdir -p /config/hive
		mv -f /hive /config/hive/
		mv -f /hive-config /config/hive/
		mv -f /home/root/.profile /config/hive/home/root/
		ln -s /config/hive/hive/ /hive
		ln -s /config/hive/hive-config/ /hive-config
		ln -s /config/hive/home/root/.profile /home/root/.profile
	fi
	[ ! -d /config/hive ] && mkdir /config/hive

	echo_action 'Copying to /config/hive/'
	cp -rf "hiveos-asic-${release_version_to_install}/"* /config/hive/ || die 'Copy error'

	sleep 2

	case "$PATH" in
		*'/hive/bin:/hive/sbin'*)	: ok good to go								;;
		*)							export PATH="$PATH:/hive/bin:/hive/sbin"	;;
	esac
	export LD_LIBRARY_PATH=/hive/lib

	if [ ! -e /hive ]; then
		ln -s /config/hive/hive/ /hive
		ln -s /config/hive/hive-config/ /hive-config
		ln -s /config/hive/home/root/.profile /home/root/.profile
	fi

	if grep -Fq '### HIVE AUTORUN ###' /config/network.conf || grep -Fq 'ln -s /config/hive/hive/ /hive' /config/network.conf; then
		echo_info '/config/network.conf skipped'
	else
		cat >> /config/network.conf <<-FILEEOF

			### HIVE AUTORUN ###
			[ -e /config/hive_autorun ] && nohup /bin/sh -c '/config/hive_autorun' > /dev/null 2>&1 &
		FILEEOF
	fi
	cp -rf /hive/bin/hive_autorun /config/hive_autorun

	echo_action 'Booting The Client'
	/hive/bin/hive > /tmp/client-boot.log 2>&1

	#on cgminer's antminer no cron daemon, run tasks in background
# legacy cron imitation
# now it's a /hive/bin/controller built-in
#	nohup bash -c 'sleep 60; /hive/bin/cron1' > /dev/null 2>&1 &
#	nohup bash -c 'sleep 60; /hive/bin/cron2' > /dev/null 2>&1 &

	sleep 2

	# FARM_HASH could be defined externaly or by command-line option
	/hive/bin/firstrun "$FARM_HASH"
}

install_innosilicon () {
	#
	#
	#

	mount -o remount,rw,relatime,ubi=0,vol=0 -t ubifs ubi0:rootfs /
	[ ! -d /config/hive ]	&& mkdir -p /config/hive
	[ ! -d /hive ]			&& mkdir /hive

	### untar was right here

	echo_action 'Copying'
	cp -rf "hiveos-asic-${release_version_to_install}/hive-config" /config/hive/						|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/hive/bin" /config/hive/							|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/hive/etc" /config/hive/							|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/hive/sbin" /hive/									|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/hive/lib" /hive/									|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/home/root/.profile" /etc/profile.d/hive.sh		|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/hive/share/innosilicon/"* /etc/systemd/system/	|| die 'Copy error'

	sleep 2

	case "$PATH" in
		*'/hive/bin:/hive/sbin'*)	: ok good to go								;;
		*)							export PATH="$PATH:/hive/bin:/hive/sbin"	;;
	esac
	export LD_LIBRARY_PATH=/hive/lib

	[ ! -L /hive/bin ]		&& [ ! -e /hive/bin ]		&& ln -s /config/hive/bin /hive/bin
	[ ! -L /hive/etc ]		&& [ ! -e /hive/etc ]		&& ln -s /config/hive/etc /hive/etc
	[ ! -L /hive-config ]	&& [ ! -e /hive-config ]	&& ln -s /config/hive/hive-config/ /hive-config
	[ ! -L /hive/sbin/nc ]	&& [ ! -e /hive/sbin/nc ]	&& ln -s /hive/sbin/busybox.nosuid /hive/sbin/nc

	#systemd autorun and cron
	systemctl daemon-reload
	systemctl is-enabled hive.service > /dev/null
	[ $? -eq 1 ] && systemctl enable hive.service
	systemctl start hive.service
	systemctl is-enabled hive-agent-screen.timer > /dev/null
	[ $? -eq 1 ] && systemctl enable hive-agent-screen.timer
	systemctl start hive-agent-screen.timer
	systemctl is-enabled hive-cache-ip.timer > /dev/null
	[ $? -eq 1 ] && systemctl enable hive-cache-ip.timer
	systemctl start hive-cache-ip.timer

	sleep 2
	nohup sync && sleep 600 && mount -o remount,ro,relatime,ubi=0,vol=0 -t ubifs ubi0:rootfs / &

	# FARM_HASH could be defined externaly or by command-line option
	/hive/bin/firstrun "$FARM_HASH"
	systemctl start hive.service
}

install_dragonMint () {
	#
	#
	#

	mount -o remount,rw,relatime -t ubifs ubi0:rootfs /
	[ ! -d /config/hive ]	&& mkdir -p /config/hive
	[ ! -d /hive ]			&& mkdir /hive

	### untar was right here

	echo_action 'Copying'
	cp -rf "hiveos-asic-${release_version_to_install}/hive-config" /config/hive/						|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/hive/bin" /config/hive/							|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/hive/etc" /config/hive/							|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/hive/sbin" /hive/									|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/hive/lib" /hive/									|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/home/root/.profile" /etc/profile.d/hive.sh		|| die 'Copy error'
	cp -rf "hiveos-asic-${release_version_to_install}/hive/share/innosilicon/"* /etc/systemd/system/	|| die 'Copy error'

	sleep 2

	case "$PATH" in
		*'/hive/bin:/hive/sbin'*)	: ok good to go								;;
		*)							export PATH="$PATH:/hive/bin:/hive/sbin"	;;
	esac
	export LD_LIBRARY_PATH=/hive/lib

	[ ! -L /hive/bin ]		&& [ ! -e /hive/bin ]		&& ln -s /config/hive/bin /hive/bin
	[ ! -L /hive/etc ]		&& [ ! -e /hive/etc ]		&& ln -s /config/hive/etc /hive/etc
	[ ! -L /hive-config ]	&& [ ! -e /hive-config ]	&& ln -s /config/hive/hive-config/ /hive-config
	[ ! -L /hive/sbin/nc ]	&& [ ! -e /hive/sbin/nc ]	&& ln -s /hive/sbin/busybox.nosuid /hive/sbin/nc

	#systemd autorun and cron
	systemctl daemon-reload
	systemctl is-enabled hive.service > /dev/null
	[ $? -eq 1 ] && systemctl enable hive.service
	systemctl start hive.service
	systemctl is-enabled hive-agent-screen.timer > /dev/null
	[ $? -eq 1 ] && systemctl enable hive-agent-screen.timer
	systemctl start hive-agent-screen.timer
	systemctl is-enabled hive-cache-ip.timer > /dev/null
	[ $? -eq 1 ] && systemctl enable hive-cache-ip.timer
	systemctl start hive-cache-ip.timer

	sleep 2
	nohup sync && sleep 600 && mount -o remount,ro,relatime -t ubifs ubi0:rootfs / &

	# FARM_HASH could be defined externaly or by command-line option
	/hive/bin/firstrun "$FARM_HASH"
	systemctl start hive.service
}

install_innosilicon_innominer () {
	#
	#
	#

	mount -o remount,rw,relatime -t jffs2 /dev/root /
	[ ! -d /hive ] && mkdir /hive

	### untar was right here

	echo_action 'Copying to /innocfg'
	cp -rf "hiveos-asic-${release_version_to_install}/hive-config" /innocfg/						|| die 'Copy error'
	echo_action 'Copying to /'
	cp -rf "hiveos-asic-${release_version_to_install}/hive" /										|| die 'Copy error'
#	cp -rf "hiveos-asic-${release_version_to_install}/home/root/.profile" /etc/profile.d/hive.sh	|| die 'Copy error'

	[ ! -L /hive-config ] && [ ! -e /hive-config ] && ln -s /innocfg/hive-config/ /hive-config

	#autorun
	if grep -Fq '### HIVE AUTORUN ###' /etc/init.d/rcS; then
		echo_info '/etc/init.d/rcS skipped'
	else
		cat >> /etc/init.d/rcS <<-FILEEOF

			### HIVE AUTORUN ###
			[ -e /hive/bin/hive ] && nohup /hive/sbin/bash -c 'sleep 30; /hive/bin/hive > /tmp/client-boot.log 2>&1; echo "Running The Client..."' > /dev/null 2>&1 &
			[ -e /hive/bin/hello ] && nohup /hive/sbin/bash -c 'sleep 40; /hive/bin/hello' > /dev/null 2>&1 &
		FILEEOF
# legacy cron imitation
# now it's a /hive/bin/controller built-in
#			[ -e /hive/bin/cron1 ] && nohup /hive/sbin/bash -c 'sleep 60; /hive/bin/cron1' > /dev/null 2>&1 &
#			[ -e /hive/bin/cron2 ] && nohup /hive/sbin/bash -c 'sleep 60; /hive/bin/cron2' > /dev/null 2>&1 &
	fi

	#PATH
	if grep -Fq '### HIVE PROFILE ###' /etc/profile; then
		echo_info '/etc/profile skipped'
	else
		cat >> /etc/profile <<-FILEEOF

			### HIVE PROFILE ###
			case "\$PATH" in
			    *'/hive/bin:/hive/sbin'*)	: ok good to go								;;
			    *)							export PATH="\$PATH:/hive/bin:/hive/sbin"	;;
			esac
			export LD_LIBRARY_PATH=/hive/lib
		FILEEOF
	fi

	case "$PATH" in
		*'/hive/bin:/hive/sbin'*)	: ok good to go								;;
		*)							export PATH="$PATH:/hive/bin:/hive/sbin"	;;
	esac
	export LD_LIBRARY_PATH=/hive/lib

	sync
	sleep 5
	mount -o remount,ro,relatime -t jffs2 /dev/root /

	echo_action 'Booting The Client'
	/hive/bin/hive > /tmp/client-boot.log 2>&1

	# FARM_HASH could be defined externaly or by command-line option
	/hive/bin/firstrun "$FARM_HASH"
}

install_zig () {
	#
	#
	#

	echo_action 'Copying to /'
	cp -rf "hiveos-asic-${release_version_to_install}/"* / || die 'Copy error'

	sleep 2

	ln -s /bin/busybox /bin/nc
	cp -rf /hive/share/zig/crontab.root /etc/cron.d/hive
	cp -rf /home/root/.profile /etc/profile.d/hive.sh
	/etc/init.d/cron restart
	apt update
	apt install -y curl screen jq
	sed -i 's/#!\/bin\/sh/#!\/bin\/bash/g' "/hive/bin/$script_basename"
	case "$PATH" in
		*'/hive/bin:/hive/sbin'*)	: ok good to go								;;
		*)							export PATH="$PATH:/hive/bin:/hive/sbin"	;;
	esac
	export LD_LIBRARY_PATH=/hive/lib

	echo_action 'Booting The Client'
	/hive/bin/hive > /tmp/client-boot.log 2>&1

	sleep 2

	# FARM_HASH could be defined externaly or by command-line option
	/hive/bin/firstrun "$FARM_HASH"
}

install_whatsminer() { # whatsminer, / - ro
	echo ""
	mount -o remount,rw,noatime,nodiratime,nodelalloc,data=journal -t ext4 /
	echo "> Extracting $filename"
	if [ ! -d /data/hive ]; then
		mkdir -p /data/hive/hive-config
	fi
	tar -xzv -f $filename
	rm -rf hiveos-asic-$release/hive/sbin/teleconsole
	cp -rf hiveos-asic-$release/hive /
        mv -f /hive/share/whatsminer/sbin/* /hive/sbin/
	[ $? -ne 0 ] && echo "Error extracting $filename" && exit 1

	rm $filename
	sync

	export PATH=$PATH:/hive/bin:/hive/sbin
	export LD_LIBRARY_PATH=/hive/lib

	if [ ! -e /hive-config ]; then
		ln -s /data/hive/hive-config/ /hive-config
	fi
	cp -rf /hive/share/whatsminer/S99hive /etc/rc.d/
	cp -rf /hive/share/S9/.profile /root/
	sync
	mount -o remount,ro,noatime,nodiratime,nodelalloc,data=journal -t ext4 /

	/hive/bin/hive

	#$FARM_HASH can be defined externally
	bash -c "/hive/bin/firstrun $FARM_HASH"
}



if [ "$ASIC_MODEL" == "Antminer S9" ]; then
	echo "Install Antminer S9"
	install_antminer_bmminer
elif [ "$ASIC_MODEL" == "Antminer S9i" ]; then
	echo "Install Antminer S9i"
	install_antminer_bmminer
elif [ "$ASIC_MODEL" == "Antminer S9j" ]; then
	echo "Install Antminer S9j"
	install_antminer_bmminer
elif [ "$ASIC_MODEL" == "Antminer S9 Hydro" ]; then
	echo "Install Antminer S9 Hydro"
	install_antminer_bmminer
elif [ "$ASIC_MODEL" == "Antminer S11" ]; then
	echo "Install Antminer S11"
	install_antminer_bmminer
elif echo "$ASIC_MODEL" | grep -q -s -F "Antminer S9 (vnish"; then
	echo "Install Antminer S9 vnish"
	install_antminer_bmminer
elif echo "$ASIC_MODEL" | grep -q -s -F "Antminer S9"; then
	echo "Install Antminer S9"
	install_antminer_bmminer
elif [ "$ASIC_MODEL" == "Antminer " ]; then
	echo "Install Antminer B3"
	install_antminer_bmminer
elif [ "$ASIC_MODEL" == "Antminer A3" ]; then
	echo "Install Antminer A3"
	install_antminer_cgminer
elif [ "$ASIC_MODEL" == "Antminer D3" ]; then
	echo "Install Antminer D3"
	install_antminer_cgminer
elif echo "$ASIC_MODEL" | grep -q -s -F "Antminer D3 Blissz"; then
	echo "Install Antminer D3 Blissz"
	install_antminer_cgminer
elif [ "$ASIC_MODEL" == "Antminer L3+" ]; then
	echo "Install Antminer L3+"
	install_antminer_cgminer
elif [ "$ASIC_MODEL" == "Antminer L3++" ]; then
	echo "Install Antminer L3++"
	install_antminer_cgminer
elif [ "$ASIC_MODEL" == "Antminer Z9-Mini" ]; then
	echo "Install Antminer Z9-Mini"
	install_antminer_Z9_cgminer
elif echo "$ASIC_MODEL" | grep -q -s -F "Antminer Z9"; then
	echo "Install Antminer Z9"
	install_antminer_Z9_cgminer
elif [ "$ASIC_MODEL" == "Antminer X3" ]; then
	echo "Install Antminer X3"
	install_antminer_cgminer
elif [ "$ASIC_MODEL" == "Antminer S7" ]; then
	echo "Install Antminer S7"
	install_antminer_cgminer
elif [ "$ASIC_MODEL" == "Antminer DR3" ]; then
	echo "Install Antminer DR3"
	install_antminer_cgminer
elif [ "$ASIC_MODEL" == "Antminer T9+" ]; then
	echo "Install Antminer T9+"
	install_antminer_bmminer
elif [ "$ASIC_MODEL" == "Antminer T9" ]; then
	echo "Install Antminer T9"
	install_antminer_bmminer
elif [ "$ASIC_MODEL" == "Antminer E3" ]; then
	echo "Install Antminer E3"
	install_antminer_bmminer
elif [ "$ASIC_MODEL" == "b29+.g19" ]; then
	echo "Install Innosilicon A9"
	install_innosilicon
elif [ "$ASIC_MODEL" == "d9.g19" ]; then
	echo "Install Innosilicon D9"
	install_innosilicon
elif [ "$ASIC_MODEL" == "s11.g19" ]; then
	echo "Install Innosilicon S11"
	install_innosilicon
elif [ "$ASIC_MODEL" == "s11.g19" ]; then
	echo "Install Innosilicon A8"
	install_innosilicon_innominer
elif [ "$ASIC_MODEL" == "Zig Z1+" ]; then
	echo "Install Zig Z1+"
	install_zig
elif [ "$ASIC_MODEL" == "Zig Z1" ]; then
	echo "Install Zig Z1"
	install_zig
else
	echo "Not found $ASIC_MODEL"
	exit 1
fi

. /hive/bin/colors

#Don't restart it...
#echo -e "> Saying hello to server again"
#hello restartminer

rm -rf /tmp/hiveos-asic*

#Restart agent
echo -e "> Restarting agent"
screen -S agent -X quit
agent-screen dontattach

echo -e "${GREEN}Upgrade complete. Have a happy mining.${NOCOLOR}"

sync
exit "$exitcode_OK"
